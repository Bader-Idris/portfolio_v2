server {
  listen 80;
  listen [::]:80;
  server_name baderidris.com www.baderidris.com;

  location ~ /.well-known/acme-challenge {
    allow all;
    root /var/www/html;
  }

  location / {
    rewrite ^ https://$host$request_uri? permanent;

    # Ensure all unmatched paths are sent to index.html for SPA routing
    # try_files $uri /index.html;
  }
}

server {
  # ! it's important to stay up to date with: OSCP stapling
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name baderidris.com www.baderidris.com;

  server_tokens off;

  ssl_certificate /etc/letsencrypt/live/baderidris.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/baderidris.com/privkey.pem;

  ssl_buffer_size 8k;

  ssl_dhparam /etc/ssl/certs/dhparam.pem;

  ssl_protocols TLSv1.2;
  ssl_prefer_server_ciphers on;

  ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

  ssl_ecdh_curve secp384r1;
  ssl_session_tickets off;

  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 8.8.8.8;


  # assets, media
  location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ {
      expires 7d;
  }

  # svg, fonts
  location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff2?)$ {
      add_header Access-Control-Allow-Origin "*";
      expires    7d;
  }

  location / {
    try_files $uri @app;

    # Try this and its duplicate above at :15 to handle ancestors of 404 as /hi/why?
    # try_files $uri /index.html;

  }

  # gzip
  gzip            on;
  gzip_vary       on;
  gzip_proxied    any;
  gzip_comp_level 6;
  gzip_types      text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

  location @app {
    proxy_pass http://app:3000;

    # Useful headers for proxying
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Nginx-Proxy true;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header X-Forwarded-Proto $scheme;
    # check if they'll crash the app?

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    # add_header Content-Security-Policy   "default-src *  data: 'self' 'unsafe-eval' 'unsafe-inline' http: https: ws: wss: blob: frame-ancestors img-src https://raw.githubusercontent.com;" always; # has errors, frame-ancestors affect <embed>, <iframe>, or <object> usages
    add_header Content-Security-Policy "default-src 'self' 'unsafe-eval' 'unsafe-inline' http: https: ws: wss: blob: data: baderApp://*; 
    img-src 'self' https://raw.githubusercontent.com data:; 
    frame-ancestors 'self';" always;
    # add_header Permissions-Policy        "interest-cohort=()" always;

    #add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    # enable strict transport security only if you understand the implications
    # check this for more info https://hstspreload.org/

    # Proxy timeouts
    proxy_connect_timeout              60s;
    proxy_send_timeout                 60s;
    proxy_read_timeout                 60s;

  }

  root /var/www/html;
  index index.html index.htm index.nginx-debian.html;
}
# docs: https://www.digitalocean.com/community/tutorials/how-to-secure-a-containerized-node-js-application-with-nginx-let-s-encrypt-and-docker-compose#step-5-modifying-the-web-server-configuration-and-service-definition
